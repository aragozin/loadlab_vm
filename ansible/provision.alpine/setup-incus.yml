---
    - name: Install Incus related packages
      package: 
        name: 
          - apparmor
          - acl
          - attr
          - busybox-binsh
          - ca-certificates
          - cgmanager
          - dbus
          - dnsmasq
          - dqlite
          - eudev-libs
          - iproute2
          - iptables
          - libacl
          - libcap2
          - libgcc
          - libintl
          - lxc
          - lxc-libs
          - musl
          - netcat-openbsd
          - nftables
          - rsync
          - shadow-subids
          - sqlite-libs
          - squashfs-tools
          - tar
          - tar
          - xz          
          
        state: present

    - name: Copy incus binary
      copy:
        src: "/opt/loadlab/setup/ansible/.hack/incus/bin/{{item.name}}"
        dest: "/usr/sbin/{{item.name}}"
        owner: root
        group: root
        mode: "0755"
      with_items:
        - name: incus
        - name: incusd

    - name: Link incus to lxc
      file:
        src: "/usr/sbin/incus"
        dest: "/usr/sbin/lxc"
        state: hard

    - name: Copy incus libs
      copy:
        src: "/opt/loadlab/setup/ansible/.hack/incus/lib/{{item.name}}"
        dest: "/usr/lib/{{item.dest_name}}"
        owner: root
        group: root
        mode: "0755"
      with_items:
        - name: libcowsql.so.0.0.1
          dest_name: libcowsql.so.0
        - name: libraft.so.0.0.0
          dest_name: libraft.so.0

    - name: Copy incus service files
      copy:
        src: "/opt/loadlab/setup/ansible/.hack/incus/init.d/incus"
        dest: "/etc/init.d/incus"
        owner: root
        group: root
        mode: "0755"

    - name: Enable LXD related services
      service:
        name: "{{item.service}}"
        enabled: yes
        state: started
      with_items:
        - service: cgroups
        - service: incus

    - name: Bind incus sockets under LXD path
      ansible.posix.mount:
        path: /var/lib/lxd
        src: /var/lib/incus
        fstype: none
        opts: bind
        boot: true
        state: mounted

    - name: Patch lxd_container module
      copy:
        src: "/opt/loadlab/setup/ansible/.hack/lxd_container/"
        dest: "/root/.ansible/plugins"
        owner: root
        group: root
        mode: "0644"  

    - name: Tweak pam
      lineinfile: 
        dest: /etc/pam.d/base-session-noninteractive 
        line: "session optional pam_cgfs.so -c freezer,memory,name=systemd,unified"
        state: present

    - name: Tweak LXC idmaps
      lineinfile: 
        dest: /etc/lxc/default.conf 
        line: "{{item.line}}"
        state: present
      with_items:
        - line: "lxc.idmap = u 0 100000 65536"
        - line: "lxc.idmap = g 0 100000 65536"

    - name: Tweak subuid/subguid
      lineinfile: 
        dest: "{{item.file}}" 
        line: "{{item.line}}"
        state: present
      with_items:
        - line: "root:100000:65536"
          file: /etc/subuid
        - line: "root:100000:65536"
          file: /etc/subgid
               
    - name: Hack mkfs.ext4 - mkdirs (Alpine workaround)
      file:
        path: "{{lab.path.confdir}}/sbin"
        state: directory

# Looks like mkfs.ext4 is not required now
    - name: Hack mkfs.ext4 - link (Alpine workaround)
      file:
        src: /sbin/mke2fs
        dest: "{{lab.path.confdir}}/sbin/mkfs.ext4"
        state: link
      when: "0 > 1"

    - name: Hack mkfs.ext4 - remove original (Alpine workaround)
      file:
        path: /sbin/mkfs.ext4
        state: absent
      when: "0 > 1"        

    - name: Hack mkfs.ext4 (Alpine workaround)
      copy:
        dest: /usr/sbin/mkfs.ext4
        mode: "u=rwx,g=rx,o=rx"
        content: |
          #!/bin/sh
          set -e
          # dirty hack
          # need to change order of arguments when called by LXD
          {{lab.path.confdir}}/sbin/mkfs.ext4 $2 $3 $1
      when: "0 > 1"

    - name: Make systemd mount point script (Alpine workaround)
      copy:
        dest: /etc/init.d/cgroups-systemd-mount
        mode: "u=rwx,g=rx,o=rx"
        content: |
          #!/sbin/openrc-run

          description="Mount systemd controller"

          depend()
          {
              need sysfs cgroups    
          }

          start()
          {
              if [ -d /sys/fs/cgroup ]; then
                  mkdir -p /sys/fs/cgroup/systemd
                  mount -t cgroup -o none,name=systemd systemd /sys/fs/cgroup/systemd
              fi
              return 0
          }

    - name: Make systemd mount point script - enable (Alpine workaround)
      service:
        name: cgroups-systemd-mount
        state: started
        enabled: yes

    - name: LXD init
      command: incus admin init --preseed
      args:
        stdin: |      
          config:
            images.auto_update_interval: "0"
          networks:
          - config:
              ipv4.address: auto
              ipv6.address: none
              ipv4.dhcp: true
            description: ""
            name: lxdbr0
            type: ""
          storage_pools: []
          profiles:
          - config: {}
            description: ""
            devices:
              eth0:
                name: eth0
                nictype: bridged
                parent: lxdbr0
                type: nic
            name: default
          cluster: null
  
    - name: LXD profile - 'labnode'
      lxd_profile:
        name: labnode
        state: present

    - name: LXD Host - Check default storage pool
      shell: incus storage create default_pool lvm || exit 0
      register: command_result
      failed_when: "not (command_result.stdout == 'Storage pool default_pool created' or command_result.stdout == 'Error: The storage pool already exists: The record already exists')"
      changed_when: "command_result.stdout == 'Storage pool default_pool created'"

    - name: Force CGroups V1 (for compatibility)
      lineinfile: 
        dest: /etc/rc.conf 
        line: "rc_cgroup_mode=\"hybrid\""
        state: present
   